# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class Temperature(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, temperature: float=None):  # noqa: E501
        """Temperature - a model defined in Swagger

        :param temperature: The temperature of this Temperature.  # noqa: E501
        :type temperature: float
        """
        self.swagger_types = {
            'temperature': float
        }

        self.attribute_map = {
            'temperature': 'temperature'
        }
        self._temperature = temperature

    @classmethod
    def from_dict(cls, dikt) -> 'Temperature':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Temperature of this Temperature.  # noqa: E501
        :rtype: Temperature
        """
        return util.deserialize_model(dikt, cls)

    @property
    def temperature(self) -> float:
        """Gets the temperature of this Temperature.


        :return: The temperature of this Temperature.
        :rtype: float
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature: float):
        """Sets the temperature of this Temperature.


        :param temperature: The temperature of this Temperature.
        :type temperature: float
        """
        if temperature is None:
            raise ValueError("Invalid value for `temperature`, must not be `None`")  # noqa: E501

        self._temperature = temperature
